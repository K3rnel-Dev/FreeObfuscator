<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>